class Class is end
class AnyValue extends Class is end
class AnyRef extends Class is end
class Array extends AnyRef is end
class List extends AnyRef is end
class Integer extends AnyValue is
    // Constructors
    this(p: Integer) is end
    this(p: Real) is end

    // Features
    var Min : Integer()
    var Max : Integer()

    // Conversions
    method toReal() : Real is end
    method toBoolean() : Boolean is end

    // Unary operators
    method UnaryMinus() : Integer is end

    // Integer binary arithmetics
    method Plus(p:Integer) : Integer is end
    method Plus(p:Real) : Real is end
    method Minus(p: Integer) : Integer is end
    method Minus(p: Real) : Real is end
    method Mult(p: Integer) : Integer is end
    method Mult(p: Real) : Real is end
    method Div(p: Integer) : Integer is end
    method Div(p: Real) : Real is end
    method Rem(p: Integer) : Integer is end

    // Relations
    method Less(p: Integer) : Boolean is end
    method Less(p: Real) : Boolean is end
    method LessEqual(p: Integer) : Boolean is end
    method LessEqual(p: Real) : Boolean is end
    method Greater(p: Integer) : Boolean is end
    method Greater(p: Real) : Boolean is end
    method GreaterEqual(p: Integer) : Boolean is end
    method GreaterEqual(p: Real) : Boolean is end
    method Equal(p: Integer) : Boolean is end
    method Equal(p: Real) : Boolean is end

    method MaxInt(a: Array[Integer]) : Integer is
        var max : Integer().Min()
        var i : Integer(1)
        while i.Less(a.Length()) loop
            if a.get(i).Greater(max) then max := get(i) end
                i := i.Plus(1)
        end
        return max
    end
end
class Real extends AnyValue is
    // Constructors
    this(p: Real) is end
    this(p: Integer) is end

    // Features
    var Min : Real()
    var Max : Real()
    var Epsilon : Real()

    // Conversions
    method toInteger() : Integer is end

    // Unary operators
    method UnaryMinus() : Real is end

    // Real binary arithmetics
    method Plus(p:Real) : Real is end
    method Plus(p:Integer) : Real is end
    method Minus(p: Real) : Real is end
    method Minus(p: Integer) : Real is end
    method Mult(p: Real) : Real is end
    method Mult(p: Integer) : Real is end
    method Div(p: Integer) : Real is end
    method Div(p: Real) : Real is end
    method Rem(p: Integer) : Real is end

    // Relations
    method Less(p: Real) : Boolean is end
    method Less(p: Integer) : Boolean is end
    method LessEqual(p: Real) : Boolean is end
    method LessEqual(p: Integer) : Boolean is end
    method Greater(p: Real) : Boolean is end
    method Greater(p: Integer) : Boolean is end
    method GreaterEqual(p: Real) : Boolean is end
    method GreaterEqual(p: Integer) : Boolean is end
    method Equal(p: Real) : Boolean is end
    method Equal(p: Integer) : Boolean is end
end

class Boolean extends AnyValue is
    // Constructor
    this(b: Boolean) is end

    // Conversion
    method toInteger() : Integer is end

    // Boolean operators
    method Or(p: Boolean) : Boolean is end
    method And(p: Boolean) : Boolean is end
    method Xor(p: Boolean) : Boolean is end
    method Not() : Boolean is end
end
class Array[T] extends AnyRef is
    // Constructor
    this(l: Integer) is end

    // Conversion
    method toList() : List is end

    // Features
    method Length() : Integer is end

    // Access to elements
    method get(i: Integer) : T is end
    method set(i: Integer, v: T) : T is end
end
class List[T] extends AnyRef is
    // Constructors
    this() is end
    this(p: T) is end
    this(p: T, count: Integer) is end

    // Operators on lists
    method append(v: T) : List is end
    method head() : T is end
    method tail() : List is end
end